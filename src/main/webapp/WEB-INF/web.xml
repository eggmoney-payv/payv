<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">

	<display-name>payv</display-name>

	<!-- ====================================== -->
	<!-- 1. Spring Root Context 설정 -->
	<!-- ====================================== -->

	<!-- Spring 설정 파일 위치 - 기존 classpath* 패턴 유지 + security 추가 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/root-context.xml
			classpath*:spring/security-context.xml
		</param-value>
	</context-param>

	<!-- Spring Root WebApplicationContext 로드 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- ====================================== -->
	<!-- 2. 인코딩 필터 (한글 처리) -->
	<!-- ====================================== -->

	<!-- UTF-8 인코딩 필터 - Spring Security 필터보다 먼저 실행 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ====================================== -->
	<!-- 3. Spring Security Filter (핵심 추가 부분) -->
	<!-- ====================================== -->

	<!-- Spring Security Filter Chain - 모든 HTTP 요청을 가로채서 인증/인가 검사 - DelegatingFilterProxy가 
		Spring Bean 'springSecurityFilterChain'을 찾아서 위임 - 반드시 DispatcherServlet보다 
		먼저 실행되어야 함 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- ====================================== -->
	<!-- 4. Spring MVC DispatcherServlet (기존 설정 유지) -->
	<!-- ====================================== -->

	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- ====================================== -->
	<!-- 5. 세션 설정 -->
	<!-- ====================================== -->

	<session-config>
		<session-timeout>30</session-timeout>
		<cookie-config>
			<http-only>true</http-only>
			<secure>false</secure>
		</cookie-config>
	</session-config>

	<!-- ====================================== -->
	<!-- 6. 에러 페이지 설정 -->
	<!-- ====================================== -->

	<!-- HTTP 상태 코드별 에러 페이지 -->
	<error-page>
		<error-code>400</error-code>
		<location>/WEB-INF/views/error/400.jsp</location>
	</error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/error/403.jsp</location>
	</error-page>

	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>

	<!-- 예외 타입별 에러 페이지 -->
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/WEB-INF/views/error/error.jsp</location>
	</error-page>

</web-app>