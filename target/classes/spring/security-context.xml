<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Spring Security XML 설정 - DB 연동 버전 -->

	<!-- HTTP 보안 설정 -->
	<security:http auto-config="true" use-expressions="true">
		<!-- CSRF 비활성화 (개발 단계) -->
		<security:csrf disabled="true" />

		<!-- URL별 접근 권한 설정 (순서가 매우 중요!) -->

		<!-- 1. 정적 리소스는 모든 사용자 허용 -->
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/css/**"
			access="permitAll" />
		<security:intercept-url pattern="/js/**"
			access="permitAll" />
		<security:intercept-url pattern="/images/**"
			access="permitAll" />
		<security:intercept-url pattern="/favicon.ico"
			access="permitAll" />

		<!-- 2. 인증/회원가입 관련 페이지 -->
		<security:intercept-url pattern="/signup/**"
			access="permitAll" />
		<security:intercept-url pattern="/login/**"
			access="permitAll" />
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/signup"
			access="permitAll" />

		<!-- 3. 에러 페이지 -->
		<security:intercept-url pattern="/error/**"
			access="permitAll" />

		<!-- 4. 개발용 임시 경로 -->
		<security:intercept-url pattern="/dev/**"
			access="permitAll" />

		<!-- 5. 홈페이지 및 메인 페이지 -->
		<security:intercept-url pattern="/"
			access="permitAll" />
		<security:intercept-url pattern="/home"
			access="permitAll" />

		<!-- 6. 보안이 필요한 페이지들 (로그인 후 접근 가능) -->
		<security:intercept-url pattern="/user/**"
			access="hasRole('USER')" />
		<security:intercept-url pattern="/ledger/**"
			access="hasRole('USER')" />
		<security:intercept-url pattern="/dashboard/**"
			access="hasRole('USER')" />
		<security:intercept-url pattern="/dashboard"
			access="hasRole('USER')" />

		<!-- 7. 관리자 전용 페이지 -->
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ADMIN')" />

		<!-- 8. 기타 모든 요청 (개발 단계에서는 허용) -->
		<security:intercept-url pattern="/**"
			access="permitAll" />

		<!-- 커스텀 로그인 페이지 설정 -->
		<security:form-login login-page="/login"
			login-processing-url="/perform_login" username-parameter="email"
			password-parameter="password" default-target-url="/dashboard"
			authentication-failure-url="/login?error"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"
			always-use-default-target="false" />

		<!-- 로그아웃 설정 -->
		<security:logout logout-url="/logout"
			logout-success-url="/login?logout" invalidate-session="true"
			delete-cookies="JSESSIONID" />

		<!-- 세션 관리 -->
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" expired-url="/login?expired" />
		</security:session-management>

		<!-- 접근 거부 처리 -->
		<security:access-denied-handler
			error-page="/error/403" />
	</security:http>

	<!-- 인증 관리자 설정 - 실제 데이터베이스 사용 -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder
				ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- BCrypt 패스워드 인코더 Bean -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- 커스텀 인증 성공 핸들러 -->
	<bean id="customAuthenticationSuccessHandler"
		class="com.eggmoney.payv.infrastructure.security.CustomAuthenticationSuccessHandler" />

	<!-- 커스텀 인증 실패 핸들러 -->
	<bean id="customAuthenticationFailureHandler"
		class="com.eggmoney.payv.infrastructure.security.CustomAuthenticationFailureHandler" />

	<!-- Null Request Cache (개발용) -->
	<bean id="nullRequestCache"
		class="org.springframework.security.web.savedrequest.NullRequestCache" />

	<!-- HTTP Firewall 설정 (개발용 - 완화된 보안) -->
	<bean id="httpFirewall"
		class="org.springframework.security.web.firewall.DefaultHttpFirewall" />

</beans>